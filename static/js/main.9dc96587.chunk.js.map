{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","state","squares","Array","fill","xIsNext","i","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2OAIMA,G,6KAOQ,IAAD,OACL,OACI,4BAAQC,UAAU,SACdC,QAAS,kBAAM,EAAKC,MAAMD,YACzBE,KAAKD,MAAME,W,GAXPC,IAAMC,YAiBrBC,E,kDACF,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,wDASPC,GACR,IAAMJ,EAAUN,KAAKK,MAAMC,QAAQK,QAC/BC,EAAgBN,IAAYA,EAAQI,KAIxCJ,EAAQI,GAAKV,KAAKK,MAAMI,QAAU,IAAM,IACxCT,KAAKa,SAAS,CAAEP,QAASA,IACzBN,KAAKa,SAAS,CAAEJ,SAAUT,KAAKK,MAAMI,a,mCAG5BC,GAAI,IAAD,OACZ,OACI,kBAACd,EAAD,CACIK,MAAOD,KAAKK,MAAMC,QAAQI,GAC1BZ,QAAS,kBAAM,EAAKgB,YAAYJ,Q,+BAKxC,IACIK,EADEC,EAASJ,EAAgBZ,KAAKK,MAAMC,SAU1C,OAPIS,EADAC,EACS,WAAaA,EAGb,iBAAmBhB,KAAKK,MAAMI,QAAU,IAAM,KAKvD,6BACI,yBAAKZ,UAAU,UAAUkB,GACzB,yBAAKlB,UAAU,aACVG,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,IAEvB,yBAAKpB,UAAU,aACVG,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,IAEvB,yBAAKpB,UAAU,aACVG,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,GAClBjB,KAAKiB,aAAa,S,GAxDnBf,IAAMC,WA+DpBe,E,uKAEE,OACI,yBAAKrB,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACO,EAAD,OAEJ,yBAAKP,UAAU,aACX,8BACA,mC,GATDK,IAAMC,WAwBzB,SAASS,EAAgBN,GAWrB,IAVA,IAAMa,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CAAC,IAAD,cACjBS,EAAMT,GADW,GAC5BW,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GAClE,OAAOjB,EAAQe,GAGvB,OAAO,KAvBXG,IAASC,OACL,kBAACP,EAAD,MACAQ,SAASC,eAAe,W","file":"static/js/main.9dc96587.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         value: null,\r\n    //     }\r\n    // }\r\n    render() {\r\n        return (\r\n            <button className=\"square\"\r\n                onClick={() => this.props.onClick()}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext: true\r\n        };\r\n\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({ squares: squares });\r\n        this.setState({ xIsNext: !this.state.xIsNext });\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.state.squares[i]}\r\n                onClick={() => this.handleClick(i)} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        }\r\n        else {\r\n            status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n        // const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}